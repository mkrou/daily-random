{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Editor.svelte",
    "../../Winner.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import \"../node_modules/mvp.css/mvp.css\"\n    import Editor from \"./Editor.svelte\";\n    import {personsStorage} from \"./persons\"\n    import {slide} from 'svelte/transition';\n    import {quintOut} from 'svelte/easing';\n    import Winner from \"./Winner.svelte\";\n\n    let persons = [];\n\n    personsStorage.useLocalStorage();\n    personsStorage.subscribe(value => {\n        persons = value;\n    });\n\n    let showEditor = persons.length === 0;\n    let disabled = persons.length === 0;\n\n    const swith = () => showEditor = !showEditor\n\n    let winner = \"\";\n\n    function choose() {\n        winner = \"\";\n        winner = persons[Math.floor(Math.random() * persons.length)];\n    }\n\n\n</script>\n\n<main>\n    <div id=\"container\">\n        {#if winner}\n            <Winner name=\"{winner}\"/>\n        {/if}\n        <button disabled={persons.length < 2 } on:click={choose}>Random</button>\n        <button on:click={swith}>Persons ({persons.length})</button>\n        {#if showEditor}\n            <div class=\"editor-container\" transition:slide=\"{{delay: 250, duration: 300, easing: quintOut }}\">\n                <Editor/>\n            </div>\n        {/if}\n    </div>\n</main>\n\n<style>\n    main {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        box-sizing: border-box;\n    }\n\n    html, body {\n        height: 100%;\n    }\n\n    #container {\n        text-align: center;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: none;\n        }\n    }\n\n    .editor-container {\n        box-sizing: border-box;\n    }\n</style>",
    "<script>\n    import {personsStorage} from \"./persons\"\n\n    let persons = [];\n\n    personsStorage.useLocalStorage();\n    personsStorage.subscribe(value => {\n        persons = value;\n    });\n\n    let person = \"\";\n\n    function addPerson(name) {\n        if (name.length > 0 && persons.indexOf(name) === -1) {\n            personsStorage.update(persons => [name, ...persons])\n            person = \"\";\n        }\n    }\n\n    function removePerson(name) {\n        personsStorage.update(persons => persons.filter(elem => elem !== name));\n    }\n</script>\n\n<form on:submit|preventDefault>\n    <div class=\"row\">\n        <input autofocus type=\"text\" bind:value={person}>\n        <button type=\"submit\" on:click={addPerson(person)}>Add</button>\n    </div>\n    {#each persons as person}\n        <div class=\"row\">\n            <span>{person}</span>\n            <button on:click={removePerson(person)}>Del</button>\n        </div>\n    {/each}\n\n\n</form>\n\n<style>\n    button {\n        padding: 0.4rem 0.8rem;\n        margin: 0;\n        margin-left: 0.4rem;\n    }\n\n    input {\n        margin: 0;\n    }\n\n    .row {\n        padding: 0.4rem;\n        display: flex;\n        justify-content: space-between;\n        vertical-align: middle\n    }\n</style>",
    "<script>\n    import { onMount, onDestroy } from 'svelte';\n    export let name;\n    let characters = ['ðŸ¥³', 'ðŸŽ‰', 'âœ¨'];\n\n    let confetti = new Array(20).fill()\n            .map((_, i) => {\n                return {\n                    character: characters[i % characters.length],\n                    x: Math.random() * 100,\n                    y: -20 - Math.random() * 100,\n                    r: 0.1 + Math.random() * 1\n                };\n            })\n            .sort((a, b) => a.r - b.r);\n\n    onMount(() => {\n        let frame;\n\n        function loop() {\n            frame = requestAnimationFrame(loop);\n\n            confetti = confetti.map(emoji => {\n                emoji.y += 0.7 * emoji.r;\n                if (emoji.y > 120) emoji.y = -20;\n                return emoji;\n            });\n        }\n\n        loop();\n\n        return () => cancelAnimationFrame(frame);\n    });\n\n</script>\n\n<style>\n    :global(body) {\n        overflow: hidden;\n    }\n\n    span {\n        position: absolute;\n        font-size: 5vw;\n    }\n</style>\n\n{#each confetti as c}\n    <span style=\"left: {c.x}%; top: {c.y}%; transform: scale({c.r})\">{c.character}</span>\n{/each}\n<p>ðŸŽ‰ The winner is {name} ðŸŽ‰</p>"
  ],
  "names": [],
  "mappings": "AA8CI,IAAI,eAAC,CAAC,AACF,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,AAC1B,CAAC,AAMD,UAAU,eAAC,CAAC,AACR,UAAU,CAAE,MAAM,AACtB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACvB,IAAI,eAAC,CAAC,AACF,SAAS,CAAE,IAAI,AACnB,CAAC,AACL,CAAC,AAED,iBAAiB,eAAC,CAAC,AACf,UAAU,CAAE,UAAU,AAC1B,CAAC;AC9BD,MAAM,eAAC,CAAC,AACJ,OAAO,CAAE,MAAM,CAAC,MAAM,CACtB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,MAAM,AACvB,CAAC,AAED,KAAK,eAAC,CAAC,AACH,MAAM,CAAE,CAAC,AACb,CAAC,AAED,IAAI,eAAC,CAAC,AACF,OAAO,CAAE,MAAM,CACf,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,cAAc,CAAE,MAAM;IAC1B,CAAC;AClBO,IAAI,AAAE,CAAC,AACX,QAAQ,CAAE,MAAM,AACpB,CAAC,AAED,IAAI,cAAC,CAAC,AACF,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,GAAG,AAClB,CAAC"
}